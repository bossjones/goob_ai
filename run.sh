#!/usr/bin/env bash

set -x

# declare -a my_array=(
# "unlink_orig_file"
# "path_for"
# "save_attachment"
# "attachment_to_dict"
# "file_to_local_data_dict"
# "handle_save_attachment_locally"
# "download_image"
# "file_to_data_uri"
# "data_uri_to_file"
# "get_logger_tree_printout"
# "dump_logger_tree"
# "dump_logger"
# "filter_empty_string"
# "worker"
# "co_task"
# "get_prefix"
# "preload_guild_data"
# "extensions"
# "_prefix_callable"
# "details_from_file"
# "unlink_orig_file"
# "path_for"
# "save_attachment"
# "attachment_to_dict"
# "setup_hook"
# "owner"
# "_clear_gateway_data"
# "before_identify_hook"
# "on_command_error"
# "get_guild_prefixes"
# "get_raw_guild_prefixes"
# "set_guild_prefixes"
# "add_to_blacklist"
# "remove_from_blacklist"
# "query_member_named"
# "get_or_fetch_member"
# "resolve_member_ids"
# "on_ready"
# "on_shard_resumed"
# "load_files"
# "process_attachments"
# "stats_webhook"
# "log_spammer"
# "check_for_attachments"
# "get_attachments"
# "write_attachments_to_disk"
# "prepare_agent_input"
# "get_session_id"
# "handle_dm_from_user"
# "get_context"
# "process_commands"
# "handle_user_task"
# "on_message"
# "on_guild_join"
# "close"
# "start"
# "my_background_task"
# "on_worker_monitor"
# "setup_workers"
# "setup_co_tasks"
# "input_classifier"
# "config"
# "reminder"
# "config_cog"
# "send_long_message"
# )

# Here's the modified bash script that iterates over the array and runs the command for each function name:

declare -a my_array=(
    # "unlink_orig_file"
    # "path_for"
    # "save_attachment"
    # "attachment_to_dict"
    # "file_to_local_data_dict"
    # "handle_save_attachment_locally"
    # "download_image"
    # "file_to_data_uri"
    # "data_uri_to_file"
    # "get_logger_tree_printout"
    # "dump_logger_tree"
    # "dump_logger"
    # "filter_empty_string"
    # "worker"
    # "co_task"
    # "get_prefix"
    # "preload_guild_data"
    # "extensions"
    # "_prefix_callable"
    # "details_from_file"
    # "unlink_orig_file"
    # "path_for"
    # "save_attachment"
    # "attachment_to_dict"
    # "setup_hook"
    # "owner"
    # "_clear_gateway_data"
    # "before_identify_hook"
    # "on_command_error"
    # "get_guild_prefixes"
    # "get_raw_guild_prefixes"
    # "set_guild_prefixes"
    # "add_to_blacklist"
    # "remove_from_blacklist"
    # "query_member_named"
    # "get_or_fetch_member"
    # "resolve_member_ids"
    # "on_ready"
    # "on_shard_resumed"
    # # "load_files"
    # "process_attachments"
    # # "stats_webhook"
    # # "log_spammer"
    # "check_for_attachments"
    # "get_attachments"
    # "write_attachments_to_disk"
    # "prepare_agent_input"
    # "get_session_id"
    "handle_dm_from_user"
    "get_context"
    "process_commands"
    "handle_user_task"
    "on_message"
    "close"
    "start"
    "my_background_task"
    "on_worker_monitor"
    # "setup_workers"
    # "setup_co_tasks"
    # "input_classifier"
    # "config"
    # "reminder"
    # "config_cog"
    "send_long_message"
)

for func in "${my_array[@]}"; do
    aider --message "add descriptive docstrings to function ${func} in goob_bot.py. Please use pep257 convention. Update existing docstrings if need be." src/goob_ai/goob_bot.py
done

# This script declares the array `my_array` and then iterates over each element in the array, running the `aider` command with the function name substituted in place of `<function_name>`.
