tests/fixtures/screenshot_image_larger00013.PNG
# typings


__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm-project.org/#use-with-ide
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# # PyCharm
# #  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
# #  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# #  and can be added to the global gitignore or merged into this file.  For a more nuclear
# #  option (not recommended) you can uncomment the following to ignore the entire idea folder.
# #.idea/

# .env
.env
.envrc

# local dev
docker/

# Unit test / coverage reports
.cache
.coverage
.coverage.*
.coverage*
.ruff_cache
.mypy_cache
.ruff_cache/
.mypy_cache/
.pytest_cache/
.vscode/settings.json
.hypothesis/
.tox/
*,cover
cov_annotate
cov.xml
coverage.xml
htmlcov
htmlcov/
junit/
nosetests.xml
__pycache__/

# vim swp files
.vimrc
*.swp

# OSX os files
.DS_Store
.DS_Store?

# SASS
.sass-cache
*.css.map

# intellij
.idea

# python
*.pyc



# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintainted in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
database/database.db
database/messages.db

# from cerebro

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/

.idea/
# .vscode/

# Project
dbdata


cov.xml
cov_annotate


monkeytype.sqlite3

# stubs
# colorization_release_v2.caffemodel
.vscode/settings.json
gallery-dl
youtube-dl
machine_learning_with_python/settings_test.toml
# .envrc
data.ms
tests/.vscode
WIKI_PRICES_212b326a081eacca455e13140d7bb9db.zip
WIKI_PRICES_212b326a081eacca455e13140d7bb9db.csv
data/WIKI_PRICES_212b326a081eacca455e13140d7bb9db.parquet
data/kaggle/nyse/*.zip
data/kaggle/nyse/*.csv
data/kaggle/nyse/*.parquet
deeplearning_data/*.jpg
deeplearning_data/*.jpeg
deeplearning_data/*.png

deeplearning_data/**/*.jpg
deeplearning_data/**/*.jpeg
deeplearning_data/**/*.png
deeplearning_data/**/*.gif
deeplearning_data/**/*.webp
*.avi
*.hdf5
*.h5
# errbackends/err-backend-discord/

# # persistent data
# data/ACLs.db
# data/Backup.db
# data/ChatRoom.db
# data/CommandNotFoundFilter.db
# data/Flows.db
# data/Health.db
# data/Help.db
# data/Plugins.db
# data/Utils.db
# data/VersionChecker.db
# data/core.db
# data/discord_backend.db
# data/repomgr.db

.direnv/
*.pth
*.zip

# typingcov/
# diditwork.webp
# temp/
*.pdf
rtdocs
notebooks/chroma_db
notebooks/chroma


__pycache__
.env
LICENSE
.vscode
projects
examples/
.ignore*
*.log
25MB_song.mp4
tests/fixtures/25MB_song.mp3
.prompts.d
ruff_config.toml
.virtual_documents/
notebooks/e2e_evals.ipynb
tests/services/cassettes/.*
src/goob_ai/data/chroma/vectorstorage/
