"""
This type stub file was generated by pyright.
"""

import asyncio
import typing
import discord
import discord.http as dhttp
import discord.state as dstate
from . import backend as back

"""
    Mock implementation of a ``discord.state.ConnectionState``. Overwrites a Client's default state, allowing hooking of
    its methods and support for test-related features.
"""
class FakeState(dstate.ConnectionState):
    """
        A mock implementation of a ``ConnectionState``. Overrides methods that would otherwise cause issues, and
        implements functionality such as disabling dispatch temporarily.
    """
    http: back.FakeHttp
    def __init__(self, client: discord.Client, http: dhttp.HTTPClient, user: discord.ClientUser = ..., loop: asyncio.AbstractEventLoop = ...) -> None:
        ...
    
    def stop_dispatch(self) -> None:
        """
            Stop dispatching events to the client, if we are
        """
        ...
    
    def start_dispatch(self) -> None:
        """
            Start dispatching events to the client, if we aren't already
        """
        ...
    
    async def query_members(self, guild: discord.Guild, query: str, limit: int, user_ids: int, cache: bool, presences: bool) -> None:
        ...
    
    async def chunk_guild(self, guild: discord.Guild, *, wait: bool = ..., cache: typing.Optional[bool] = ...): # -> None:
        ...
    
    def parse_channel_create(self, data) -> None:
        """
        Need to make sure that FakeVoiceChannels are created when this is called to create VoiceChannels. Otherwise,
        guilds would not be set up correctly.

        :param data: info to use in channel creation.
        """
        ...
    


