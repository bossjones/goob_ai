"""
This type stub file was generated by pyright.
"""

from .retry import RetryConfig
from typing import Dict, NamedTuple, Optional

class GRPCClientConfig(NamedTuple):
    """
    GRPC client configuration options.

    :param secure: Whether to use encrypted protocol (SSL). defaults to True.
    :type secure: bool, optional
    :param timeout: defaults to 2 seconds. Fail if gateway doesn't receive response within timeout.
    :type timeout: int, optional
    :param conn_timeout: defaults to 1. Timeout to retry connection if gRPC is unavailable. 0 is no retry.
    :type conn_timeout: int, optional
    :param reuse_channel: Whether to reuse the same grpc channel for multiple requests
    :type reuse_channel: bool, optional
    :param retry_config: RetryConfig indicating how requests should be retried
    :type retry_config: RetryConfig, optional
    :param grpc_channel_options: A dict of gRPC channel arguments
    :type grpc_channel_options: Dict[str, str]
    :param additional_metadata: Additional metadata to be sent to the server with each request. Note that this
        metadata refers to [gRPC metadata](https://grpc.io/docs/guides/metadata/) which is a concept similar
        to HTTP headers. This is unrelated to the metadata can be stored with a vector in the index.
    :type additional_metadata: Dict[str, str]
    """
    secure: bool = ...
    timeout: int = ...
    conn_timeout: int = ...
    reuse_channel: bool = ...
    retry_config: Optional[RetryConfig] = ...
    grpc_channel_options: Optional[Dict[str, str]] = ...
    additional_metadata: Optional[Dict[str, str]] = ...


