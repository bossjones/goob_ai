"""
This type stub file was generated by pyright.
"""

import sys

"""Routines that pretty-print a hierarchy of logging `Node` objects."""
if sys.version_info < (2, 6):
    ...
def printout(node=...): # -> None:
    """Print a tree of loggers, given a `Node` from `logging_tree.nodes`.

    If no `node` argument is provided, then the entire tree of currently
    active `logging` loggers is printed out.

    """
    ...

def build_description(node=...): # -> str:
    """Return a multi-line string describing a `logging_tree.nodes.Node`.

    If no `node` argument is provided, then the entire tree of currently
    active `logging` loggers is printed out.

    """
    ...

def describe(node): # -> Generator[Any | LiteralString | str, Any, None]:
    """Generate lines describing the given `node` tuple.

    The `node` should be a tuple returned by `logging_tree.nodes.tree()`.

    """
    ...

def describe_filter(f): # -> str:
    """Return text describing the logging filter `f`."""
    ...

handler_formats = ...
if sys.version_info >= (2, 5):
    ...
if sys.version_info >= (2, 6):
    ...
def describe_handler(h): # -> Generator[Any | str | LiteralString, Any, None]:
    """Yield one or more lines describing the logging handler `h`."""
    ...

def class_of(obj): # -> Any:
    """Try to learn the class of `obj`.

    We perform the operation gingerly, as `obj` could be any kind of
    user-supplied object: an old-style class, a new-style class, or a
    built-in type that doesn't follow normal rules.

    """
    ...

