"""
This type stub file was generated by pyright.
"""

import pytest
from scipy._lib._array_api import SCIPY_ARRAY_API, SCIPY_DEVICE

def pytest_configure(config): # -> None:
    ...

def pytest_runtest_setup(item): # -> None:
    ...

@pytest.fixture(scope="function", autouse=True)
def check_fpu_mode(request): # -> Generator[None, Any, None]:
    """
    Check FPU mode was not changed during the test.
    """
    ...

xp_available_backends = ...
if SCIPY_ARRAY_API and isinstance(SCIPY_ARRAY_API, str):
    ...
if 'cupy' in xp_available_backends:
    SCIPY_DEVICE = ...
array_api_compatible = ...
@pytest.fixture
def skip_if_array_api(xp, request): # -> None:
    """
    Skip based on the ``skip_if_array_api`` marker.

    Parameters
    ----------
    *backends : tuple
        Backends to skip, e.g. ``("array_api_strict", "torch")``.
        These are overriden when ``np_only`` is ``True``, and are not
        necessary to provide for non-CPU backends when ``cpu_only`` is ``True``.
    reasons : list, optional
        A list of reasons for each skip. When ``np_only`` is ``True``,
        this should be a singleton list. Otherwise, this should be a list
        of reasons, one for each corresponding backend in ``backends``.
        If unprovided, default reasons are used. Note that it is not possible
        to specify a custom reason with ``cpu_only``. Default: ``None``.
    np_only : bool, optional
        When ``True``, the test is skipped for all backends other
        than the default NumPy backend. There is no need to provide
        any ``backends`` in this case. To specify a reason, pass a
        singleton list to ``reasons``. Default: ``False``.
    cpu_only : bool, optional
        When ``True``, the test is skipped on non-CPU devices.
        There is no need to provide any ``backends`` in this case,
        but any ``backends`` will also be skipped on the CPU.
        Default: ``False``.
    """
    ...

SCIPY_HYPOTHESIS_PROFILE = ...
