"""
This type stub file was generated by pyright.
"""

from ..utils import DummyObject

class TensorFlowBenchmarkArguments(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TensorFlowBenchmark(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFForcedBOSTokenLogitsProcessor(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFForcedEOSTokenLogitsProcessor(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFForceTokensLogitsProcessor(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGenerationMixin(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLogitsProcessor(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLogitsProcessorList(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLogitsWarper(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMinLengthLogitsProcessor(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFNoBadWordsLogitsProcessor(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFNoRepeatNGramLogitsProcessor(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRepetitionPenaltyLogitsProcessor(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSuppressTokensAtBeginLogitsProcessor(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSuppressTokensLogitsProcessor(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTemperatureLogitsWarper(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTopKLogitsWarper(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTopPLogitsWarper(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class KerasMetricCallback(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class PushToHubCallback(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSequenceSummary(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSharedEmbeddings(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


def shape_list(*args, **kwargs): # -> None:
    ...

TF_ALBERT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFAlbertForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAlbertForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAlbertForPreTraining(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAlbertForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAlbertForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAlbertForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAlbertMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAlbertModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAlbertPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_MODEL_FOR_AUDIO_CLASSIFICATION_MAPPING = ...
TF_MODEL_FOR_CAUSAL_LM_MAPPING = ...
TF_MODEL_FOR_DOCUMENT_QUESTION_ANSWERING_MAPPING = ...
TF_MODEL_FOR_IMAGE_CLASSIFICATION_MAPPING = ...
TF_MODEL_FOR_MASK_GENERATION_MAPPING = ...
TF_MODEL_FOR_MASKED_IMAGE_MODELING_MAPPING = ...
TF_MODEL_FOR_MASKED_LM_MAPPING = ...
TF_MODEL_FOR_MULTIPLE_CHOICE_MAPPING = ...
TF_MODEL_FOR_NEXT_SENTENCE_PREDICTION_MAPPING = ...
TF_MODEL_FOR_PRETRAINING_MAPPING = ...
TF_MODEL_FOR_QUESTION_ANSWERING_MAPPING = ...
TF_MODEL_FOR_SEMANTIC_SEGMENTATION_MAPPING = ...
TF_MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING = ...
TF_MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING = ...
TF_MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING = ...
TF_MODEL_FOR_TABLE_QUESTION_ANSWERING_MAPPING = ...
TF_MODEL_FOR_TEXT_ENCODING_MAPPING = ...
TF_MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING = ...
TF_MODEL_FOR_VISION_2_SEQ_MAPPING = ...
TF_MODEL_FOR_ZERO_SHOT_IMAGE_CLASSIFICATION_MAPPING = ...
TF_MODEL_MAPPING = ...
TF_MODEL_WITH_LM_HEAD_MAPPING = ...
class TFAutoModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForAudioClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForCausalLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForDocumentQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForMaskedImageModeling(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForMaskGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForNextSentencePrediction(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForPreTraining(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForSemanticSegmentation(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForSeq2SeqLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForSpeechSeq2Seq(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForTableQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForTextEncoding(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForVision2Seq(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelForZeroShotImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFAutoModelWithLMHead(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBartForConditionalGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBartForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBartModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBartPretrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_BERT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFBertEmbeddings(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBertForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBertForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBertForNextSentencePrediction(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBertForPreTraining(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBertForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBertForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBertForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBertLMHeadModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBertMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBertModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBertPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlenderbotForConditionalGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlenderbotModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlenderbotPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlenderbotSmallForConditionalGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlenderbotSmallModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlenderbotSmallPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_BLIP_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFBlipForConditionalGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlipForImageTextRetrieval(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlipForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlipModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlipPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlipTextModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFBlipVisionModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_CAMEMBERT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFCamembertForCausalLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCamembertForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCamembertForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCamembertForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCamembertForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCamembertForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCamembertModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCamembertPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_CLIP_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFCLIPModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCLIPPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCLIPTextModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCLIPVisionModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_CONVBERT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFConvBertForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvBertForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvBertForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvBertForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvBertForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvBertLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvBertModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvBertPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvNextForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvNextModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvNextPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvNextV2ForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvNextV2Model(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFConvNextV2PreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_CTRL_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFCTRLForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCTRLLMHeadModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCTRLModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCTRLPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_CVT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFCvtForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCvtModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFCvtPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFData2VecVisionForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFData2VecVisionForSemanticSegmentation(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFData2VecVisionModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFData2VecVisionPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_DEBERTA_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFDebertaForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDebertaForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDebertaForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDebertaForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDebertaModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDebertaPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_DEBERTA_V2_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFDebertaV2ForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDebertaV2ForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDebertaV2ForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDebertaV2ForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDebertaV2ForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDebertaV2Model(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDebertaV2PreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_DEIT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFDeiTForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDeiTForImageClassificationWithTeacher(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDeiTForMaskedImageModeling(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDeiTModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDeiTPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFAdaptiveEmbedding(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTransfoXLForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTransfoXLLMHeadModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTransfoXLMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTransfoXLModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTransfoXLPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_DISTILBERT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFDistilBertForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDistilBertForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDistilBertForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDistilBertForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDistilBertForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDistilBertMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDistilBertModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDistilBertPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_DPR_CONTEXT_ENCODER_PRETRAINED_MODEL_ARCHIVE_LIST = ...
TF_DPR_QUESTION_ENCODER_PRETRAINED_MODEL_ARCHIVE_LIST = ...
TF_DPR_READER_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFDPRContextEncoder(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDPRPretrainedContextEncoder(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDPRPretrainedQuestionEncoder(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDPRPretrainedReader(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDPRQuestionEncoder(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFDPRReader(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_EFFICIENTFORMER_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFEfficientFormerForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFEfficientFormerForImageClassificationWithTeacher(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFEfficientFormerModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFEfficientFormerPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_ELECTRA_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFElectraForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFElectraForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFElectraForPreTraining(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFElectraForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFElectraForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFElectraForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFElectraModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFElectraPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFEncoderDecoderModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


ESM_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFEsmForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFEsmForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFEsmForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFEsmModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFEsmPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_FLAUBERT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFFlaubertForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFlaubertForQuestionAnsweringSimple(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFlaubertForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFlaubertForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFlaubertModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFlaubertPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFlaubertWithLMHeadModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_FUNNEL_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFFunnelBaseModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFunnelForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFunnelForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFunnelForPreTraining(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFunnelForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFunnelForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFunnelForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFunnelModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFFunnelPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_GPT2_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFGPT2DoubleHeadsModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGPT2ForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGPT2LMHeadModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGPT2MainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGPT2Model(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGPT2PreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGPTJForCausalLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGPTJForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGPTJForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGPTJModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGPTJPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_GROUPVIT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFGroupViTModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGroupViTPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGroupViTTextModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFGroupViTVisionModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_HUBERT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFHubertForCTC(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFHubertModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFHubertPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_LAYOUTLM_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFLayoutLMForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLayoutLMForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLayoutLMForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLayoutLMForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLayoutLMMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLayoutLMModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLayoutLMPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_LAYOUTLMV3_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFLayoutLMv3ForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLayoutLMv3ForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLayoutLMv3ForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLayoutLMv3Model(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLayoutLMv3PreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLEDForConditionalGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLEDModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLEDPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_LONGFORMER_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFLongformerForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLongformerForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLongformerForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLongformerForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLongformerForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLongformerModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLongformerPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLongformerSelfAttention(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_LXMERT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFLxmertForPreTraining(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLxmertMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLxmertModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLxmertPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFLxmertVisualFeatureEncoder(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMarianModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMarianMTModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMarianPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMBartForConditionalGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMBartModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMBartPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_MOBILEBERT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFMobileBertForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileBertForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileBertForNextSentencePrediction(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileBertForPreTraining(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileBertForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileBertForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileBertForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileBertMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileBertModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileBertPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_MOBILEVIT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFMobileViTForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileViTForSemanticSegmentation(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileViTModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMobileViTPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_MPNET_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFMPNetForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMPNetForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMPNetForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMPNetForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMPNetForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMPNetMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMPNetModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMPNetPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMT5EncoderModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMT5ForConditionalGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFMT5Model(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFOpenAIGPTDoubleHeadsModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFOpenAIGPTForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFOpenAIGPTLMHeadModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFOpenAIGPTMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFOpenAIGPTModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFOpenAIGPTPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFOPTForCausalLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFOPTModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFOPTPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFPegasusForConditionalGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFPegasusModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFPegasusPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRagModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRagPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRagSequenceForGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRagTokenForGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_REGNET_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFRegNetForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRegNetModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRegNetPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_REMBERT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFRemBertForCausalLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRemBertForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRemBertForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRemBertForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRemBertForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRemBertForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRemBertLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRemBertModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRemBertPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_RESNET_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFResNetForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFResNetModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFResNetPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_ROBERTA_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFRobertaForCausalLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_ROBERTA_PRELAYERNORM_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFRobertaPreLayerNormForCausalLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaPreLayerNormForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaPreLayerNormForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaPreLayerNormForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaPreLayerNormForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaPreLayerNormForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaPreLayerNormMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaPreLayerNormModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRobertaPreLayerNormPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_ROFORMER_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFRoFormerForCausalLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRoFormerForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRoFormerForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRoFormerForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRoFormerForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRoFormerForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRoFormerLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRoFormerModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFRoFormerPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_SAM_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFSamModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSamPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_SEGFORMER_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFSegformerDecodeHead(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSegformerForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSegformerForSemanticSegmentation(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSegformerModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSegformerPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_SPEECH_TO_TEXT_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFSpeech2TextForConditionalGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSpeech2TextModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSpeech2TextPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_SWIN_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFSwinForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSwinForMaskedImageModeling(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSwinModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFSwinPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_T5_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFT5EncoderModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFT5ForConditionalGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFT5Model(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFT5PreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_TAPAS_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFTapasForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTapasForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTapasForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTapasModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFTapasPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFVisionEncoderDecoderModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFVisionTextDualEncoderModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFViTForImageClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFViTModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFViTPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFViTMAEForPreTraining(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFViTMAEModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFViTMAEPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_WAV_2_VEC_2_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFWav2Vec2ForCTC(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFWav2Vec2ForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFWav2Vec2Model(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFWav2Vec2PreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_WHISPER_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFWhisperForConditionalGeneration(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFWhisperModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFWhisperPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_XGLM_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFXGLMForCausalLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXGLMModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXGLMPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_XLM_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFXLMForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMForQuestionAnsweringSimple(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMWithLMHeadModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_XLM_ROBERTA_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFXLMRobertaForCausalLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMRobertaForMaskedLM(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMRobertaForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMRobertaForQuestionAnswering(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMRobertaForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMRobertaForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMRobertaModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLMRobertaPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


TF_XLNET_PRETRAINED_MODEL_ARCHIVE_LIST = ...
class TFXLNetForMultipleChoice(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLNetForQuestionAnsweringSimple(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLNetForSequenceClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLNetForTokenClassification(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLNetLMHeadModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLNetMainLayer(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLNetModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class TFXLNetPreTrainedModel(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class AdamWeightDecay(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class GradientAccumulator(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class WarmUp(metaclass=DummyObject):
    _backends = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    


def create_optimizer(*args, **kwargs): # -> None:
    ...

