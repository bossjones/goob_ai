"""
This type stub file was generated by pyright.
"""

"""English Normalizer class for CLVP."""
class EnglishNormalizer:
    def __init__(self) -> None:
        ...
    
    def number_to_words(self, num: int) -> str:
        """
        Converts numbers(`int`) to words(`str`).

        Please note that it only supports upto - "'nine hundred ninety-nine quadrillion, nine hundred ninety-nine
        trillion, nine hundred ninety-nine billion, nine hundred ninety-nine million, nine hundred ninety-nine
        thousand, nine hundred ninety-nine'" or `number_to_words(999_999_999_999_999_999)`.
        """
        ...
    
    def convert_to_ascii(self, text: str) -> str:
        """
        Converts unicode to ascii
        """
        ...
    
    def normalize_numbers(self, text: str) -> str:
        """
        This method is used to normalize numbers within a text such as converting the numbers to words, removing
        commas, etc.
        """
        ...
    
    def expand_abbreviations(self, text: str) -> str:
        """
        Expands the abbreviate words.
        """
        ...
    
    def collapse_whitespace(self, text: str) -> str:
        """
        Removes multiple whitespaces
        """
        ...
    
    def __call__(self, text): # -> str:
        """
        Converts text to ascii, numbers / number-like quantities to their spelt-out counterparts and expands
        abbreviations
        """
        ...
    


