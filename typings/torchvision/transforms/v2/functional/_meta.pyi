"""
This type stub file was generated by pyright.
"""

import torch
from typing import List, Optional, Tuple
from torchvision import tv_tensors
from torchvision.tv_tensors import BoundingBoxFormat
from ._utils import _register_kernel_internal

def get_dimensions(inpt: torch.Tensor) -> List[int]:
    ...

@_register_kernel_internal(get_dimensions, torch.Tensor)
@_register_kernel_internal(get_dimensions, tv_tensors.Image, tv_tensor_wrapper=False)
def get_dimensions_image(image: torch.Tensor) -> List[int]:
    ...

_get_dimensions_image_pil = ...
@_register_kernel_internal(get_dimensions, tv_tensors.Video, tv_tensor_wrapper=False)
def get_dimensions_video(video: torch.Tensor) -> List[int]:
    ...

def get_num_channels(inpt: torch.Tensor) -> int:
    ...

@_register_kernel_internal(get_num_channels, torch.Tensor)
@_register_kernel_internal(get_num_channels, tv_tensors.Image, tv_tensor_wrapper=False)
def get_num_channels_image(image: torch.Tensor) -> int:
    ...

_get_num_channels_image_pil = ...
@_register_kernel_internal(get_num_channels, tv_tensors.Video, tv_tensor_wrapper=False)
def get_num_channels_video(video: torch.Tensor) -> int:
    ...

get_image_num_channels = ...
def get_size(inpt: torch.Tensor) -> List[int]:
    ...

@_register_kernel_internal(get_size, torch.Tensor)
@_register_kernel_internal(get_size, tv_tensors.Image, tv_tensor_wrapper=False)
def get_size_image(image: torch.Tensor) -> List[int]:
    ...

@_register_kernel_internal(get_size, tv_tensors.Video, tv_tensor_wrapper=False)
def get_size_video(video: torch.Tensor) -> List[int]:
    ...

@_register_kernel_internal(get_size, tv_tensors.Mask, tv_tensor_wrapper=False)
def get_size_mask(mask: torch.Tensor) -> List[int]:
    ...

@_register_kernel_internal(get_size, tv_tensors.BoundingBoxes, tv_tensor_wrapper=False)
def get_size_bounding_boxes(bounding_box: tv_tensors.BoundingBoxes) -> List[int]:
    ...

def get_num_frames(inpt: torch.Tensor) -> int:
    ...

@_register_kernel_internal(get_num_frames, torch.Tensor)
@_register_kernel_internal(get_num_frames, tv_tensors.Video, tv_tensor_wrapper=False)
def get_num_frames_video(video: torch.Tensor) -> int:
    ...

def convert_bounding_box_format(inpt: torch.Tensor, old_format: Optional[BoundingBoxFormat] = ..., new_format: Optional[BoundingBoxFormat] = ..., inplace: bool = ...) -> torch.Tensor:
    """See :func:`~torchvision.transforms.v2.ConvertBoundingBoxFormat` for details."""
    ...

def clamp_bounding_boxes(inpt: torch.Tensor, format: Optional[BoundingBoxFormat] = ..., canvas_size: Optional[Tuple[int, int]] = ...) -> torch.Tensor:
    """See :func:`~torchvision.transforms.v2.ClampBoundingBoxes` for details."""
    ...

