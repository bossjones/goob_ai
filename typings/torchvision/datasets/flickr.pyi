"""
This type stub file was generated by pyright.
"""

from html.parser import HTMLParser
from pathlib import Path
from typing import Any, Callable, List, Optional, Tuple, Union
from .vision import VisionDataset

class Flickr8kParser(HTMLParser):
    """Parser for extracting captions from the Flickr8k dataset web page."""
    def __init__(self, root: Union[str, Path]) -> None:
        ...
    
    def handle_starttag(self, tag: str, attrs: List[Tuple[str, Optional[str]]]) -> None:
        ...
    
    def handle_endtag(self, tag: str) -> None:
        ...
    
    def handle_data(self, data: str) -> None:
        ...
    


class Flickr8k(VisionDataset):
    """`Flickr8k Entities <http://hockenmaier.cs.illinois.edu/8k-pictures.html>`_ Dataset.

    Args:
        root (str or ``pathlib.Path``): Root directory where images are downloaded to.
        ann_file (string): Path to annotation file.
        transform (callable, optional): A function/transform that takes in a PIL image
            and returns a transformed version. E.g, ``transforms.PILToTensor``
        target_transform (callable, optional): A function/transform that takes in the
            target and transforms it.
    """
    def __init__(self, root: Union[str, Path], ann_file: str, transform: Optional[Callable] = ..., target_transform: Optional[Callable] = ...) -> None:
        ...
    
    def __getitem__(self, index: int) -> Tuple[Any, Any]:
        """
        Args:
            index (int): Index

        Returns:
            tuple: Tuple (image, target). target is a list of captions for the image.
        """
        ...
    
    def __len__(self) -> int:
        ...
    


class Flickr30k(VisionDataset):
    """`Flickr30k Entities <https://bryanplummer.com/Flickr30kEntities/>`_ Dataset.

    Args:
        root (str or ``pathlib.Path``): Root directory where images are downloaded to.
        ann_file (string): Path to annotation file.
        transform (callable, optional): A function/transform that takes in a PIL image
            and returns a transformed version. E.g, ``transforms.PILToTensor``
        target_transform (callable, optional): A function/transform that takes in the
            target and transforms it.
    """
    def __init__(self, root: str, ann_file: str, transform: Optional[Callable] = ..., target_transform: Optional[Callable] = ...) -> None:
        ...
    
    def __getitem__(self, index: int) -> Tuple[Any, Any]:
        """
        Args:
            index (int): Index

        Returns:
            tuple: Tuple (image, target). target is a list of captions for the image.
        """
        ...
    
    def __len__(self) -> int:
        ...
    


